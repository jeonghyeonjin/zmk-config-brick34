/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
    #define BASE 0
    #define NUM 1
    #define SYM 2
    #define FNC 3
// -----------------

#define QUICK_TAP_MS 175

&mt {
  quick-tap-ms = <80>;
//   global-quick-tap;
  flavor = "balanced";
  tapping-term-ms = <150>;
};

&sk {
		// don't release mods on other mods presses
    ignore-modifiers;
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/ {
		macros {
				// sometimes my device thinks a modifier is being held down
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};
		};

    combos {
        compatible = "zmk,combos";
		combo_tab {
			timeout-ms = <25>;
			key-positions = <0 1>;
			bindings = <&kp TAB>;
		};
		combo_tab2 {
			timeout-ms = <25>;
			key-positions = <1 2>;
			bindings = <&kp TAB>;
		};
		combo_undo {
			timeout-ms = <25>;
			key-positions = <21 22>;
			bindings = <&kp LC(Z)>;
		};
		combo_1 {
			timeout-ms = <40>;
			key-positions = <0 10>;
			bindings = <&kp N1>;
		};
		combo_2 {
			timeout-ms = <40>;
			key-positions = <1 11>;
			bindings = <&kp N2>;
		};
		combo_3 {
			timeout-ms = <40>;
			key-positions = <2 12>;
			bindings = <&kp N3>;
		};
		combo_4 {
			timeout-ms = <40>;
			key-positions = <3 13>;
			bindings = <&kp N4>;
		};
		combo_5 {
			timeout-ms = <40>;
			key-positions = <4 14>;
			bindings = <&kp N5>;
		};
		combo_6 {
			timeout-ms = <40>;
			key-positions = <5 15>;
			bindings = <&kp N6>;
		};
		combo_7 {
			timeout-ms = <40>;
			key-positions = <6 16>;
			bindings = <&kp N7>;
		};
		combo_8 {
			timeout-ms = <40>;
			key-positions = <7 17>;
			bindings = <&kp N8>;
		};
		combo_9 {
			timeout-ms = <40>;
			key-positions = <8 18>;
			bindings = <&kp N9>;
		};
		combo_0 {
			timeout-ms = <40>;
			key-positions = <9 19>;
			bindings = <&kp N0>;
		};
		combo_minus {
			timeout-ms = <25>;
			key-positions = <15 16>;
			bindings = <&kp MINUS>;
		};
		combo_minus2 {
			timeout-ms = <40>;
			key-positions = <16 26>;
			bindings = <&kp MINUS>;
		};
		combo_under {
			timeout-ms = <40>;
			key-positions = <15 25>;
			bindings = <&kp UNDER>;
		};
		combo_bslh2 {
			timeout-ms = <40>;
			key-positions = <17 27>;
			bindings = <&kp BSLH>;
		};
		combo_sqt2 {
			timeout-ms = <40>;
			key-positions = <18 28>;
			bindings = <&kp SQT>;
		};
		combo_equal {
			timeout-ms = <25>;
			key-positions = <25 26>;
			bindings = <&kp EQUAL>;
		};
		combo_equal2 {
			timeout-ms = <40>;
			key-positions = <13 23>;
			bindings = <&kp EQUAL>;
		};
		combo_plus {
			timeout-ms = <40>;
			key-positions = <14 24>;
			bindings = <&kp PLUS>;
		};
		combo_lpar {
			timeout-ms = <25>;
			key-positions = <2 3>;
			bindings = <&kp LPAR>;
		};
		combo_lbrc {
			timeout-ms = <25>;
			key-positions = <12 13>;
			bindings = <&kp LBRC>;
		};
		combo_lbkt {
			timeout-ms = <25>;
			key-positions = <22 23>;
			bindings = <&kp LBKT>;
		};
		combo_rpar {
			timeout-ms = <25>;
			key-positions = <6 7>;
			bindings = <&kp RPAR>;
		};
		combo_rbrc {
			timeout-ms = <25>;
			key-positions = <16 17>;
			bindings = <&kp RBRC>;
		};
		combo_rbkt {
			timeout-ms = <25>;
			key-positions = <26 27>;
			bindings = <&kp RBKT>;
		};
		combo_sqt {
			timeout-ms = <25>;
			key-positions = <17 18>;
			bindings = <&kp SQT>;
		};
		combo_bslh {
			timeout-ms = <25>;
			key-positions = <28 29>;
			bindings = <&kp BSLH>;
		};
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q0   |  W1   |  E2   |  R3   |  T4   |   |  Y5   |  U6    |  I7   |  O8   |  P9   | 
// |  A10  |  S11  |  D12  |  F13  |  G14  |   |  H15  |  J16   |  K17  |  L18  |  ;19  |
// |  Z20  |  X21  |  C22  |  V23  |  B24  |   |  N25  |  M26   |  ,27  |  .28  |  /29  | 
//                         | LWR30 | ENT31 |   | SPC32 | RSE33  |
                        bindings = <
   &kp Q            &kp W           &kp E           &kp R           &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
   &mt LSHIFT A     &kp S           &kp D           &kp F           &kp G           &kp H       &kp J       &kp K       &kp L       &mt LSHIFT SEMI
   &mt LCTRL Z      &kp X           &kp C           &kp V           &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &mt LCTRL FSLH
                                                    &mt LALT TAB    &lt SYM SPACE   &lt NUM RET &kp BSPC
                        >;
		label = "BASE";
                };
                lower_layer {

                        bindings = <
   &kp N1		    &kp N2		    &kp N3			&kp N4		    &kp N5		    &kp N6	    &kp	N7		&kp N8		&kp N9		&kp N0
   &kp MINUS 	    &kp EQUAL	&kp BSLH	        &kp LBRC   	    &kp RBRC        &kp HOME	&kp LEFT	&kp UP  	&kp RIGHT	&kp PG_UP
   &kp UNDER	    &kp PLUS	&kp PIPE	        &kp LBKT 	    &kp RBKT        &kp END	    &trans	    &kp DOWN	&trans	    &kp PG_DN
               	                                    &trans          &mo FNC         &trans      &kp DEL
                        >;
		label = "NUM";
                };

                raise_layer {

                        bindings = <
   &kp EXCL  	    &kp AT 		    &kp HASH  		&kp DLLR  	    &kp PRCNT       &kp CARET	&kp AMPS	&kp ASTRK	&kp LPAR	&kp RPAR
   &sk LALT	        &sk LGUI	    &sk LSHIFT		&sk LCTRL	    &kp RALT 	    &kp MINUS 	&kp EQUAL	&kp BSLH	&kp LBRC   	&kp RBRC
   &kp PRINTSCREEN  &trans 		    &trans 		    &trans   	    &kp GRAVE 		&kp UNDER	&kp PLUS	&kp PIPE	&kp LBKT 	&kp RBKT
        	                                        &trans          &trans          &mo FNC     &kp DEL 
                        >;
		label = "SYM";
		};
                fuc_layer {

                        bindings = <
   &kp F1	        &kp F2	        &kp F3		    &kp F4	        &kp F5          &kp F6		&kp F7		&kp F8		&kp F9      &kp F10
   &kp F11	        &kp F12	        &none		    &none	        &none 	        &none	    &none	    &none  	    &none 	    &none
   &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2 	&bt BT_SEL 3   	&bt BT_CLR 	    &none	    &none	    &none  	    &unstick 	&bootloader
        	                                        &trans          &trans          &trans      &trans 
                        >;
		label = "Func";
		};
        };
};
